name: 'Auto Release with Calendar Versioning'
description: 'Automatically create GitHub releases using semantic-release when pushing to specified branches with calendar versioning'
author: 'GitHub Actions Workflows'

inputs:
  token:
    description: 'GitHub 토큰 (GITHUB_TOKEN 또는 PAT)'
    required: true
  npm_token:
    description: 'NPM 토큰 (NPM 패키지 발행시 필요)'
    required: false
  working_directory:
    description: '작업 디렉토리'
    required: false
    default: '.'
  dry_run:
    description: '드라이런 모드 (실제 릴리즈하지 않음)'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Checkout 코드
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ inputs.token }}

    - name: Node.js 설정
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ${{ inputs.working_directory }}/package-lock.json

    - name: 의존성 설치
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: npm ci

    - name: 스크립트 실행 권한 설정
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: chmod +x scripts/generate-version.js

    - name: Semantic Release 실행 (Calendar Versioning)
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        NPM_TOKEN: ${{ inputs.npm_token }}
      run: |
        if [ "${{ inputs.dry_run }}" = "true" ]; then
          echo "🔍 드라이런 모드로 실행 중..."
          echo "📅 Calendar Versioning 형식: year.month.minor.fix"
          npx semantic-release --dry-run
        else
          echo "🚀 릴리즈 실행 중..."
          echo "📅 Calendar Versioning 형식: year.month.minor.fix"
          npx semantic-release
        fi

branding:
  icon: 'calendar'
  color: 'purple' 