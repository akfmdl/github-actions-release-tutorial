name: 'Docker Build, Push and Update Repository'
description: 'Build Docker image, push to registry, and update another repository with new image tag'
author: 'GitHub Actions Workflows'

inputs:
  github-token:
    description: 'GitHub Personal Access Token with repo permissions for update'
    required: true
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '18'
  docker-registry:
    description: 'Docker registry URL'
    required: true
  image-name:
    description: 'Docker 이미지 이름'
    required: true
  image-tag:
    description: 'Docker 이미지 태그 (예: v1.0.0, 2025.01.15.1430)'
    required: true
  dockerfile-path:
    description: 'Dockerfile 경로'
    required: false
    default: './Dockerfile'
  build-context:
    description: '빌드 컨텍스트'
    required: false
    default: '.'
  build-args:
    description: 'Docker build arguments (KEY=VALUE,KEY2=VALUE2 형식으로 쉼표 구분)'
    required: false
    default: ''
  target-repo:
    description: '대상 레포지토리 (예: owner/k8s-manifests)'
    required: true
  target-file-path:
    description: '업데이트할 파일 경로'
    required: true
  target-branch:
    description: '대상 브랜치 (미지정시 기본 브랜치 사용)'
    required: false
    default: ''
  registry-username:
    description: 'Container Registry 사용자명'
    required: false
  registry-password:
    description: 'Container Registry 패스워드'
    required: false
  commit-message:
    description: '커밋 메시지'
    required: false
    default: ''

outputs:
  image-tag:
    description: '생성된 이미지 태그'
    value: ${{ steps.docker-build-update.outputs.image-tag }}
  full-image-name:
    description: '전체 이미지 이름 (registry/image:tag)'
    value: ${{ steps.docker-build-update.outputs.full-image-name }}
  updated-file:
    description: '업데이트된 파일 경로'
    value: ${{ steps.docker-build-update.outputs.updated-file }}
  commit-message:
    description: '커밋 메시지'
    value: ${{ steps.docker-build-update.outputs.commit-message }}

runs:
  using: 'composite'
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Download docker build update script
      shell: bash
      run: |
        echo "📥 Downloading Docker build and update script..."
        curl -fsSL -o /tmp/docker-build-push-update.js https://raw.githubusercontent.com/akfmdl/github-actions-workflows/test/scripts/docker-build-push-update.js
        chmod +x /tmp/docker-build-push-update.js

    # - name: Checkout source code
    #   uses: actions/checkout@v4
    #   with:
    #     fetch-depth: 0
        
    - name: Docker build, push and update repository
      id: docker-build-update
      shell: bash
      env:
        DOCKER_REGISTRY: ${{ inputs.docker-registry }}
        IMAGE_NAME: ${{ inputs.image-name }}
        IMAGE_TAG: ${{ inputs.image-tag }}
        DOCKERFILE_PATH: ${{ inputs.dockerfile-path }}
        BUILD_CONTEXT: ${{ inputs.build-context }}
        BUILD_ARGS: ${{ inputs.build-args }}
        TARGET_REPO: ${{ inputs.target-repo }}
        TARGET_FILE_PATH: ${{ inputs.target-file-path }}
        TARGET_BRANCH: ${{ inputs.target-branch }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        REGISTRY_USERNAME: ${{ inputs.registry-username }}
        REGISTRY_PASSWORD: ${{ inputs.registry-password }}
        COMMIT_MESSAGE: ${{ inputs.commit-message }}
        SOURCE_REPOSITORY: ${{ github.repository }}
      run: |
        echo "🚀 Docker 이미지 빌드 및 레포지토리 업데이트를 시작합니다..."
        node /tmp/docker-build-push-update.js

    - name: Workflow Complete
      shell: bash
      run: |
        echo "✅ Docker Build and Update workflow completed successfully!"
        echo "📊 Summary has been generated with detailed links and information."

branding:
  icon: 'package'
  color: 'blue' 