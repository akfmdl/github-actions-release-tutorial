name: 'Auto Release with Semantic Release'
description: 'Automatically create GitHub releases using semantic-release when pushing to specified branches'
author: 'GitHub Actions Tutorial'

inputs:
  github-token:
    description: 'GitHub token for authentication'
    required: true
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '18'
  release-branches:
    description: 'Branches to release from (JSON array format)'
    required: false
    default: '["main", "master"]'
  npm-token:
    description: 'NPM token for publishing packages (optional)'
    required: false
    default: ''
  dry-run:
    description: 'Whether to run in dry-run mode'
    required: false
    default: 'false'
  working-directory:
    description: 'Working directory for the action'
    required: false
    default: '.'

outputs:
  new-release-published:
    description: 'Whether a new release was published'
    value: ${{ steps.semantic-release.outputs.new-release-published }}
  new-release-version:
    description: 'Version of the new release'
    value: ${{ steps.semantic-release.outputs.new-release-version }}
  new-release-git-tag:
    description: 'Git tag of the new release'
    value: ${{ steps.semantic-release.outputs.new-release-git-tag }}
  new-release-git-head:
    description: 'Git SHA of the new release'
    value: ${{ steps.semantic-release.outputs.new-release-git-head }}

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ inputs.github-token }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'npm'

    - name: Install dependencies
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if [ -f "package-lock.json" ]; then
          npm ci
        elif [ -f "yarn.lock" ]; then
          yarn install --frozen-lockfile
        elif [ -f "pnpm-lock.yaml" ]; then
          npm install -g pnpm
          pnpm install --frozen-lockfile
        else
          npm install
        fi

    - name: Create semantic-release configuration
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        # .releaserc.js 파일이 없으면 기본 설정을 생성
        if [ ! -f ".releaserc.js" ] && [ ! -f ".releaserc.json" ] && [ ! -f "release.config.js" ]; then
          cat > .releaserc.js << 'EOF'
        module.exports = {
          branches: ${{ inputs.release-branches }},
          plugins: [
            '@semantic-release/commit-analyzer',
            '@semantic-release/release-notes-generator',
            '@semantic-release/changelog',
            [
              '@semantic-release/npm',
              {
                npmPublish: false
              }
            ],
            [
              '@semantic-release/github',
              {
                assets: ['CHANGELOG.md']
              }
            ],
            [
              '@semantic-release/git',
              {
                assets: ['CHANGELOG.md', 'package.json', 'package-lock.json'],
                message: 'chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}'
              }
            ]
          ]
        }
        EOF
        fi

    - name: Install semantic-release and plugins
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        npm install --save-dev \
          semantic-release \
          @semantic-release/changelog \
          @semantic-release/commit-analyzer \
          @semantic-release/git \
          @semantic-release/github \
          @semantic-release/npm \
          @semantic-release/release-notes-generator

    - name: Run semantic-release
      id: semantic-release
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        NPM_TOKEN: ${{ inputs.npm-token }}
        GIT_AUTHOR_NAME: github-actions[bot]
        GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
        GIT_COMMITTER_NAME: github-actions[bot]
        GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
      run: |
        if [ "${{ inputs.dry-run }}" = "true" ]; then
          echo "🚀 Running semantic-release in dry-run mode..."
          npx semantic-release --dry-run
        else
          echo "🚀 Running semantic-release..."
          npx semantic-release
        fi

branding:
  icon: 'tag'
  color: 'blue'
