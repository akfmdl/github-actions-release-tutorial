name: 'Auto Release with Semantic Release by Commit message'
description: 'Automatically create GitHub releases using semantic-release when pushing to specified branches by commit message'
author: 'GitHub Actions Tutorial'

inputs:
  github-token:
    description: 'GitHub token for authentication'
    required: true
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '18'
  release-branches:
    description: 'Branches to release from (JSON array format)'
    required: false
    default: '["main", "master"]'
  dry-run:
    description: 'Whether to run in dry-run mode'
    required: false
    default: 'false'
  working-directory:
    description: 'Working directory for the action'
    required: false
    default: '.'
  semantic-release-version:
    description: 'Semantic Release version to use'
    required: false
    default: '22'

outputs:
  new-release-published:
    description: 'Whether a new release was published'
    value: ${{ steps.semantic-release.outputs.new-release-published }}
  new-release-version:
    description: 'Version of the new release'
    value: ${{ steps.semantic-release.outputs.new-release-version }}
  new-release-git-tag:
    description: 'Git tag of the new release'
    value: ${{ steps.semantic-release.outputs.new-release-git-tag }}
  new-release-git-head:
    description: 'Git SHA of the new release'
    value: ${{ steps.semantic-release.outputs.new-release-git-head }}

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ inputs.github-token }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Install local dependencies (if package.json exists)
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if [ -f "package.json" ]; then
          echo "üì¶ Installing project dependencies..."
          if [ -f "package-lock.json" ]; then
            npm ci
          elif [ -f "yarn.lock" ]; then
            yarn install --frozen-lockfile
          elif [ -f "pnpm-lock.yaml" ]; then
            npm install -g pnpm
            pnpm install --frozen-lockfile
          else
            npm install
          fi
        else
          echo "‚ö†Ô∏è No package.json found"
          exit 1
        fi

    - name: Run semantic-release
      id: semantic-release
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        GIT_AUTHOR_NAME: github-actions[bot]
        GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
        GIT_COMMITTER_NAME: github-actions[bot]
        GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
      run: |
        # JSON Î∞∞Ïó¥ÏùÑ Í≥µÎ∞±ÏúºÎ°ú Íµ¨Î∂ÑÎêú Î¨∏ÏûêÏó¥Î°ú Î≥ÄÌôò
        BRANCHES=$(echo '${{ inputs.release-branches }}' | jq -r '.[]' | paste -sd ' ')
        
        if [ "${{ inputs.dry-run }}" = "true" ]; then
          echo "üöÄ Running semantic-release@${{ inputs.semantic-release-version }} in dry-run mode..."
          echo "üìã Release branches: $BRANCHES"
          npx semantic-release@${{ inputs.semantic-release-version }} --dry-run --branches $BRANCHES
        else
          echo "üöÄ Running semantic-release@${{ inputs.semantic-release-version }}..."
          echo "üìã Release branches: $BRANCHES"
          npx semantic-release@${{ inputs.semantic-release-version }} --branches $BRANCHES
        fi

branding:
  icon: 'tag'
  color: 'blue'
